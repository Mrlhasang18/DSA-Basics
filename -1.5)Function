Q)In a competition, four different functions are observed. All the functions use a single for loop and within the for loop, same set of statements are executed.

Consider the following for loops:

  A) for(i = 0; i < n; i++)
 
  B) for(i = 0; i < n; i += 2)
 
  C) for(i = 1; i < n; i *= 2)
 
  D) for(i = n; i > -1; i /= 2)
If n is the size of input(positive), which function is the most efficient? In other words, which loop completes the fastest.

soln: Loop C will be efficient 
  explanation:
take fo n = 10 then for 

A it takes 10 times
B it takes 5 times
C it takes 3 times 
D it takes infinte time

so Option C is answer


Q)Which of the following is not bounded by O(n^2)?
1.(15^10) * n + 12099
2.n^1.98
3.n^3 / (sqrt(n))         //Correct !
4.(2^20) * n

soln:
they simply want to ask which one has more complexity than O(n^2)

(15^10) * n + 12099 = const *n +const =const *n => O(n)
2)n^1.98, here 1.98<2 , i.e. (n^2) > (n^1.98)

n^3 / (sqrt(n))
4)(2^20) * n = const * n => O(n)


Q)Which of the given options provides the increasing order of complexity of functions f1, f2, f3 and f4:

f1(n) = 2^n

f2(n) = n^(3/2)

f3(n) = nLogn

f4(n) = n^(Logn)

ANS: F3,F2,F4,F1

Explanation:
f1(n) = 2^n 
Here complexity is worst as it's exponentially increasing the time complexity

f2(n) = n^(3/2)
Its complexity is second-best because it's like n^1.5

f3(n) = nLogn it is the best complexity as compare to others because no power
